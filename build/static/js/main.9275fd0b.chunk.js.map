{"version":3,"sources":["components/Navbar.js","components/Formvalg.js","components/SizeSlider.js","components/SizePicker.js","components/InputRow.js","components/ShowResult.js","components/BackButton.js","components/VolumeTable.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","homeButton","marginRight","spacing","title","textTransform","margin","Navbar","home","volumes","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","onClick","Typography","variant","pieButton","Formvalg","which","onChoiceMade","orig","new","width","marginTop","height","marks","value","label","valuetext","DiscreteSlider","valueChange","Slider","defaultValue","getAriaValueText","aria-labelledby","step","valueLabelDisplay","track","min","max","onChange","e","parseFloat","target","textContent","SizePicker","shape","setArea","num","onSliderChange","type","prefix","document","getElementById","props","onInputChange","setState","dia","area","state","len","wid","outline","drawing","idText","labelText","typeIndicator","this","TextField","id","InputLabelProps","shrink","Component","numberInput","InputRow","amountLabel","itemLabel","amount","item","calculate","multiplier","placeholder","arrow","display","ShowResult","multiplicator","ingredients","calculateHowMuch","addNewLine","console","log","newItem","key","keyCounter","prevState","result","Intl","NumberFormat","maximumFractionDigits","format","map","i","BackButton","route","back","paper","control","padding","cup","SpacingGrid","formatNumber","number","Grid","container","xs","justify","App","onRouteChange","newRoute","shapes","setInitialState","event","toVolumeTable","onShapeClick","newChoice","setTimeout","includes","sizes","firstArea","secondArea","onSubmitSize","newSizes","first","second","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9275fd0b.chunk.js","sourcesContent":["import React from 'react'\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PieChartIcon from '@material-ui/icons/PieChart';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    homeButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      textTransform: 'uppercase',\n      margin: 'auto'\n\n    },\n  }),\n);\n\nfunction Navbar({ home, volumes }) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.homeButton} color=\"inherit\" aria-label=\"home\"\n                      onClick={home}>\n                    <HomeIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                    Kakekalkulatoren\n                    </Typography>\n                    <IconButton className={classes.pieButton} color=\"inherit\" aria-label=\"volume table\"\n                      onClick={volumes}>\n                    <PieChartIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { Fragment } from 'react'\nimport './Formvalg.css'\n\nfunction Formvalg({ which, onChoiceMade }) {\n    return (\n        <div className='container'>\n            {which === 'all' ? \n                <Fragment>\n                    <p>Fra en form...</p>\n                    <div className='shape outline circle' \n                        onClick={()=>onChoiceMade({orig: 'circle'})}\n                    ></div>\n                    <div className='shape outline square' \n                        onClick={()=>onChoiceMade({orig: 'square'})}\n                    ></div>\n                    <p>eller fra et antall/ en mengde...</p>\n                    <div className='shape heap' \n                        onClick={()=>onChoiceMade({orig: 'number'})}\n                    >\n                        <div className='smallItem outline circle top'></div>\n                        <div className='smallItem outline circle bottom1'></div>\n                        <div className='smallItem outline circle bottom2'></div>\n                    </div>\n                </Fragment>\n                : \n                which === 'circleSquare' ?\n                    <Fragment>\n                        <p>...til en annen</p>\n                        <div className='shape outline circle' \n                        onClick={()=>onChoiceMade({new: 'circle'})}\n                        ></div>\n                        <div className='shape outline square' \n                            onClick={()=>onChoiceMade({new: 'square'})}\n                        ></div>\n                    </Fragment>\n                    :\n                    <p>...til et annet!</p>\n                 \n            }\n           \n        </div>\n    )\n}\n\nexport default Formvalg\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n    marginTop: '40px',\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nconst marks = [\n  {\n    value: 0,\n    label: '0 cm',\n  },\n  {\n    value: 20,\n    label: '20 cm',\n  },\n  {\n    value: 40,\n    label: '40 cm',\n  },\n  {\n    value: 60,\n    label: '60 cm',\n  },\n];\n\nfunction valuetext(value) {\n  return `${value} cm`;\n}\n\nexport default function DiscreteSlider({ valueChange }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        defaultValue={35}\n        getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider-always\"\n        step={0.5}\n        marks={marks}\n        valueLabelDisplay=\"on\"\n        track={false}\n        min={0}\n        max={60}\n        onChange={e => valueChange(parseFloat(e.target.textContent))}\n      />\n    </div>\n  );\n}\n","import React, { Component, Fragment } from 'react'\nimport SizeSlider from './SizeSlider'\nimport TextField from '@material-ui/core/TextField'\n\nexport default class SizePicker extends Component {\n    constructor({ shape, setArea, num }) {\n        super()\n        this.state = {\n            setArea: setArea,\n            shape: shape,\n            area: 0,\n            dia: 0,\n            len: 0,\n            wid: 0\n        }\n    }\n\n    onSliderChange = (value, type) => {\n        let prefix\n        (type === 'd')\n            ? prefix = 'diameter'\n            : (type === 'l') ? \n                prefix = 'length'\n            : (type ==='w') ?\n                prefix = 'width'\n            : prefix = 'number'\n        const inputField = document.getElementById(`${prefix}-input-${this.props.num}`)\n        inputField.value = value\n        this.onInputChange(value, type)\n    }\n\n    onInputChange = (value, type) => {\n        (type === 'd') ?\n            this.setState({ \n                dia: value,\n                area: 3.14*(value/2)**2 \n            }, () => {\n                this.props.setArea(this.state.area)\n            })\n        : (type === 'l') ?\n            this.setState({\n                len: value, \n                area: value*this.state.wid\n            }, () => {\n                this.props.setArea(this.state.area)\n            })\n            : (type === 'w') ? \n                this.setState({ \n                    wid: value, \n                    area: value*this.state.len \n                }, () => {\n                    this.props.setArea(this.state.area)\n                })    \n                :   this.setState({ \n                        area: value\n                    }, () => {\n                        this.props.setArea(this.state.area)\n                    })   \n    }\n\n    render() {\n        const shape = this.state.shape\n        let outline, drawing, idText, labelText, typeIndicator\n        if (shape === 'circle') {\n            outline = 'outline'\n            drawing = 'circle'\n            idText = 'diameter'\n            labelText = 'Diameter (cm)'\n            typeIndicator = 'd'\n        } else if (shape === 'square') {\n            outline = 'outline'\n            drawing = 'square'\n            idText = 'length'\n            labelText = 'Lengde (cm)'\n            typeIndicator = 'l'\n        } else {\n            outline = ''\n            drawing = 'heap'\n            idText = 'number'\n            labelText = 'Mengde/ antall'\n            typeIndicator = 'n'\n        }\n        return (\n            <Fragment>\n                <div className={`shape ${outline} ${drawing}`}>\n                    { shape === 'number'\n                     ? <Fragment>\n                            <div className='smallItem outline circle top'></div>\n                            <div className='smallItem outline circle bottom1'></div>\n                            <div className='smallItem outline circle bottom2'></div>\n                        </Fragment>\n                     : <Fragment></Fragment>\n                    }\n                </div>\n                <TextField\n                    id={`${idText}-input-${this.props.num}`}\n                    label={labelText}\n                    type=\"number\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={e => this.onInputChange(e.target.value, typeIndicator)}\n                />\n                <SizeSlider valueChange={value => this.onSliderChange(value, typeIndicator)} />\n                \n                { (shape === 'square') \n                    ? <Fragment>\n                        <TextField\n                            id={`width-input-${this.props.num}`}\n                            label=\"Bredde (cm)\"\n                            type=\"number\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={e => this.onInputChange(e.target.value, 'w')}\n                        />\n                        <SizeSlider valueChange={value => this.onSliderChange(value, 'w')} />\n                    </Fragment>\n                    : <Fragment></Fragment>\n                }\n                \n            </Fragment>\n\n        )\n    }\n}","import React from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  numberInput: {\n    width: '10px',\n  },\n  },\n}));\n\nfunction InputRow({id, amount, item, calculate, onInputChange, multiplier}) {\n    const classes = useStyles();\n    let amountLabel, itemLabel\n    id === 0 ? amountLabel = 'Mengde' : amountLabel = ''\n    id === 0 ? itemLabel = 'Enhet og ingrediens' : itemLabel = ''\n\n    return (\n        <div>\n            <TextField\n                    id={`quantity${id}`}\n                    label={amountLabel}\n                    type=\"number\"\n                    defaultValue={amount}\n                    placeholder='Mengde'\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={e => onInputChange(e.target.value, id, 'quantity')}\n            />\n            <TextField\n                    id={`text${id}`}\n                    label={itemLabel}\n                    type=\"text\"\n                    defaultValue={item}\n                    placeholder='Enhet og ingrediens'\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={e => onInputChange(e.target.value, id, 'text')}\n            />\n            <IconButton className={classes.arrow} id={id} color=\"inherit\"      \n                aria-label=\"calculate\"\n                onClick={(e) => calculate(id)}>\n                    <ArrowForwardIcon />\n            </IconButton>\n            <Typography variant=\"body1\" display='inline'>\n                {`${amount*multiplier} ${item}`}\n            </Typography>\n        </div>\n    )\n}\n\nexport default InputRow\n","import React, { Component } from 'react'\nimport InputRow from './InputRow'\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\n\nexport default class ShowResult extends Component {\n    constructor({ multiplicator }) {\n        super()\n        this.state = {\n            ingredients: [\n                \n            ],\n            keyCounter: 0\n        }\n    }\n\n    onInputChange = (value, id, type) => {\n        let ingredients = [...this.state.ingredients]\n        let item = {...ingredients[id]}\n        type === 'quantity' ? item.amount = value\n        : item.value = value\n        ingredients[id] = item \n        this.setState({ ingredients: ingredients })\n    }\n\n    calculateHowMuch = (e) => {\n        //this.addNewLine();\n    }\n\n    addNewLine = () => {\n        console.log('new line');\n        const newItem = {\n            key: this.state.keyCounter,\n            amount: '',\n            value: '',\n        }\n        this.setState(prevState => ({\n            ingredients: [...prevState.ingredients, newItem]\n          }), () => {\n            this.setState({ keyCounter: this.state.keyCounter+1 })\n          })\n        console.log(this.state.ingredients);\n    }\n\n    render() {\n        const result = new Intl.NumberFormat('en-IN', { \n            maximumFractionDigits: 2\n        }).format(this.props.multiplicator)\n\n        return (\n            <div>\n                <h2>Multipliser oppskriften med {result}</h2>\n            <Typography variant=\"subtitle2\">\n                Sett inn:\n            </Typography>\n\n            {\n                this.state.ingredients.map((item, i) => {\n                    return (\n                        <InputRow \n                            id={item.key} \n                            amount={item.amount}\n                            item={item.value} \n                            calculate={this.calculateHowMuch}\n                            onInputChange={this.onInputChange}\n                            multiplier={result} /> \n                    )\n                })\n            }\n\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"add-item\"\n                      onClick={e => this.addNewLine()}>\n                <AddIcon />\n            </IconButton>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nfunction BackButton({ route, back }) {\n    return (\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"back\"\n                      onClick={e => back(route)}>\n            <ArrowBackIosIcon />\n        </IconButton>\n    )\n}\n\nexport default BackButton\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cup = {\n    toTbsp: 16,\n    toMl: 16*15\n}\n\nexport default function SpacingGrid() {\n  const classes = useStyles();\n\n  const formatNumber = (number) => {\n      return new Intl.NumberFormat('en-IN', { \n        maximumFractionDigits: 2\n        }).format(number)\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={6}>\n        <Grid container xs={12} justify=\"center\" spacing={6}>\n            <Grid item xs={12}/>\n            <Grid item xs={12}/>\n          {\n          [1, 1/2, 1/3, 1/4].map((value) => (\n              <Fragment>\n                <Grid item xs={3}/>\n                <Grid key={value} item xs={2}> \n                    {formatNumber(value)} cup </Grid>\n                <Grid key={value} item xs={2}> \n                    {formatNumber(value*cup.toTbsp)} ss </Grid>\n                <Grid key={value} item xs={2}> \n                    {formatNumber(value*cup.toMl)} ml </Grid>\n                <Grid item xs={3}/>\n            </Fragment>\n          ))}\n          <Grid item xs={12}/>\n          <Grid item xs={12}/>\n        </Grid>\n    </Grid>\n  );\n}\n","import React, { Component, Fragment } from 'react'\nimport Navbar from './components/Navbar'\nimport Formvalg from './components/Formvalg'\nimport SizePicker from './components/SizePicker'\nimport ShowResult from './components/ShowResult'\nimport BackButton from './components/BackButton'\nimport VolumeTable from './components/VolumeTable'\nimport './App.css';\n\nexport default class App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      route: 'home', // home/ secondShape/ secondNumber/ setSize/ result/ volumeTable\n      shapes: 'all',  // all/ circleSquare/ heap\n      orig: '',   // possible: circle/ square/ number\n      new: '',\n      sizes: {\n        firstArea: 0,\n        secondArea: 0\n      }\n    }\n  }\n\n  onRouteChange = (route) => {\n    let newRoute\n    route === 'showResult' ? newRoute = 'setSize' : newRoute = 'home'\n    this.setState({\n      route: newRoute,\n      shapes: 'all'})\n  }\n\n  setInitialState = (event) => {\n    this.setState({\n      route: 'home',\n      shapes: 'all',\n    })\n  }\n\n  toVolumeTable = (event) => {\n    this.setState({\n      route: 'volumeTable',\n    })\n  }\n\n  onShapeClick = (newChoice) => {\n    this.setState(newChoice)\n\n    if (this.state.shapes === 'all') {\n      this.setState({route: 'secondShape'})\n      if (newChoice.orig === 'circle' || newChoice.orig === 'square') {\n        this.setState({shapes: 'circleSquare'})\n      } else {\n        this.setState({shapes: 'heap'})\n        this.setState({new: 'number'})\n        setTimeout(() => this.setState({ route: 'setSize'}), 3000)\n      }\n    } else if (this.state.route.includes('second')){\n        this.setState({ route: 'setSize'})\n    }\n  }\n\n  setArea = (which, area) => {\n    which === 'firstArea' ?\n      this.setState(prevState => ({\n        sizes: {\n          ...prevState.sizes,  \n          firstArea: area  \n        }\n      }))\n    : this.setState(prevState => ({\n      sizes: {\n        ...prevState.sizes,  \n        secondArea: area  \n      }\n    }))\n  }\n\n  onSubmitSize = (newSizes) => {\n    if (this.state.sizes.firstArea > 0 && this.state.sizes.secondArea > 0) {\n      this.setState({ route: 'result'})\n    } else {\n      console.log('firstA: ', this.state.sizes.firstArea);\n      console.log('secondA: ', this.state.sizes.secondArea);\n      console.log('Sizes cannot be zero');\n    }\n  }\n\n  render() {\n    const route = this.state.route \n    const first = this.state.sizes.firstArea\n    const second = this.state.sizes.secondArea\n\n    return (\n      <div className=\"App\">\n        <Navbar home={event => this.setInitialState()}\n          volumes={event => {this.toVolumeTable()}} />\n        <div className='mainArea'>\n          {route === 'home' || route === 'secondShape'\n          ? <Fragment>\n            <Formvalg \n              which={this.state.shapes}\n              onChoiceMade={this.onShapeClick}\n          />\n            </Fragment>\n          : route === 'setSize'\n            ? <Fragment>\n              <h2>Set the size of your baking trays</h2>\n              <SizePicker shape={this.state.orig} \n                  setArea={(area) => this.setArea('firstArea', area)} \n                  num={1}\n              />\n              <SizePicker shape={this.state.new} \n                  setArea={(area) => this.setArea('secondArea', area)} \n                  num={2}\n              />\n              <button type='submit' \n                  onClick={this.onSubmitSize}\n              >\n                Beregn\n              </button>\n            </Fragment>\n          : route === 'result'\n            ? <ShowResult \n                multiplicator={second/first}\n              />\n          : // route === 'volumeTable'\n            <VolumeTable />\n          }\n          <BackButton route={route} back={this.onRouteChange} />\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}